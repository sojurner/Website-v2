{"version":3,"file":"static/webpack/static/development/pages/index.js.664fe737dd6aa6f55d8f.hot-update.js","sources":["webpack:///./components/molecules/GreetingAnimation.jsx","webpack:///./components/templates/Main.jsx","webpack:///./utils/hooks.js"],"sourcesContent":["import Typography from '../atoms/Typography';\n\nconst Name = () => (\n  <Typography variant=\"h1\" children={'Paul Kim'} className=\"landing-header\" />\n);\n\nconst GreetingAnimation = ({ mounted }) => {\n  const typedHeader = () => {\n    switch (mounted) {\n      case 2:\n        return <Name />;\n      case 1:\n        return (\n          <Typography\n            variant=\"h1\"\n            children={'My Name is ...'}\n            className=\"landing-header-initial-2\"\n          />\n        );\n      case 0:\n        return (\n          <Typography\n            variant=\"h1\"\n            children={'Hello'}\n            className=\"landing-header-initial-1\"\n          />\n        );\n      default:\n        return <Name />;\n    }\n  };\n  return (\n    <>\n      <div className=\"landing-main\">{typedHeader()}</div>\n      <style jsx>{`\n        .landing-main,\n        .landing-main-show {\n          display: flex;\n          flex-direction: row;\n        }\n\n        .landing-header,\n        .landing-header-initial-1,\n        .landing-header-initial-2 {\n          font-size: 4rem;\n          height: 4.1rem;\n          text-align: center;\n          font-weight: 100;\n          color: #17bf33;\n          overflow: hidden;\n          border-right: 0.7rem solid #17bf33;\n          white-space: nowrap;\n          margin: 3rem auto 0 auto;\n          letter-spacing: 2px;\n          padding-right: 0.5rem;\n          animation: typing 1.8s steps(20, end),\n            blink-caret 0.9s step-end infinite;\n        }\n\n        .landing-header-initial-1 {\n          animation: typing-1 1s steps(10, end),\n            blink-caret 0.9s step-end infinite;\n        }\n\n        .landing-header-initial-2 {\n          animation: typing-2 2.3s steps(20, end),\n            blink-caret 0.9s step-end infinite;\n        }\n\n        .job-title,\n        .job-title-show {\n          color: rgb(76, 111, 66);\n          font-size: 1.5rem;\n          margin-top: 1rem;\n          align-self: center;\n          opacity: 0;\n          transform: translate3d(2rem, 0, 0);\n          transition: 0.3s linear;\n        }\n\n        .job-title-show {\n          transform: translate3d(0, 0, 0);\n\n          opacity: 1;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default GreetingAnimation;\n","import Typography from '../atoms/Typography';\nimport GreetingAnimation from '../molecules/GreetingAnimation';\nimport { TextSwap } from '../../utils/hooks';\n\nconst mainClass = 'main';\nconst greetingClass = `${mainClass}__greeting`;\n\nconst Main = props => {\n  return (\n    <>\n      <main {...props}>\n        <TextSwap>\n          {({ mounted }) => <GreetingAnimation mounted={mounted} />}\n        </TextSwap>\n      </main>\n      <style jsx>{`\n        main {\n          height: 500px;\n          width 58.5%;\n          background-image: url('https://images.unsplash.com/photo-1488923937092-5a9ccc6eff59');\n          background-repeat: no-repeat;\n          background-size: contain;\n          background-blend-mode: multiply;\n          background-color: rgba(0, 0, 0, 0.3);\n        }\n        div {\n          font-size: 30px;\n        }\n        img {\n          height: 400px;\n          width: 600px;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default Main;\n","import { useState, useEffect } from 'react';\n\nexport const MenuToggle = ({ children }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleToggle = () => setOpen(state => !state);\n\n  return children({ open, handleToggle });\n};\n\nexport const PortalNode = ({ children }) => {\n  const [node, setNode] = useState(null);\n\n  useEffect(() => {\n    if (document) setNode(document.querySelector('#portal'));\n  }, []);\n\n  return children({ node });\n};\n\nexport const ContactRedirect = ({ children }) => {\n  const [tooltip, setTooltip] = useState(null);\n\n  const handleTooltip = name => {\n    setTooltip(name);\n  };\n\n  const openTab = url => {\n    window.open(url, '_blank').focus();\n  };\n\n  return children({ tooltip, handleTooltip, openTab });\n};\n\nexport const Switch = ({ children, switches }) => {\n  const [activeSwitch, setActiveSwitch] = useState(switches[0]);\n\n  const handleChange = switchIndex => {\n    setActiveSwitch(switches[switchIndex]);\n  };\n\n  return children({ activeSwitch, handleChange });\n};\n\nexport const TextSwap = ({ children }) => {\n  const [mounted, setMounted] = useState(0);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setMounted(1);\n    }, 4000);\n\n    setTimeout(() => {\n      setMounted(2);\n    }, 8000);\n\n    setTimeout(() => {\n      setMounted(3);\n    }, 11500);\n  }, []);\n\n  return children({ mounted });\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAsBA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAwDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AA0BA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrCA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}