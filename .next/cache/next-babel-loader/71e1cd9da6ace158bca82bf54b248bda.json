{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport const MenuToggle = ({\n  children\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const handleToggle = () => setOpen(state => !state);\n\n  return children({\n    open,\n    handleToggle\n  });\n};\nexport const PortalNode = ({\n  children\n}) => {\n  const [node, setNode] = useState(null);\n  useEffect(() => {\n    if (document) setNode(document.querySelector('#portal'));\n  }, []);\n  return children({\n    node\n  });\n};\nexport const ContactRedirect = ({\n  children\n}) => {\n  const [tooltip, setTooltip] = useState(null);\n\n  const handleTooltip = name => {\n    setTooltip(name);\n  };\n\n  const openTab = url => {\n    window.open(url, '_blank').focus();\n  };\n\n  return children({\n    tooltip,\n    handleTooltip,\n    openTab\n  });\n};\nexport const Switch = ({\n  children,\n  switches\n}) => {\n  const [activeSwitch, setActiveSwitch] = useState(switches[0]);\n\n  const handleChange = switchIndex => {\n    setActiveSwitch(switches[switchIndex]);\n  };\n\n  return children({\n    activeSwitch,\n    handleChange\n  });\n};\nexport const TextSwap = ({\n  children\n}) => {\n  const [mounted, setMounted] = useState(0);\n  useEffect(() => {\n    setTimeout(() => {\n      setMounted(1);\n    }, 4000);\n    setTimeout(() => {\n      setMounted(2);\n    }, 8000);\n    setTimeout(() => {\n      setMounted(3);\n    }, 11500);\n  }, []);\n  return children({\n    mounted\n  });\n};","map":{"version":3,"sources":["/Users/pawl/Documents/front-end/personal/Personal-website.v2/utils/hooks.js"],"names":["useState","useEffect","MenuToggle","children","open","setOpen","handleToggle","state","PortalNode","node","setNode","document","querySelector","ContactRedirect","tooltip","setTooltip","handleTooltip","name","openTab","url","window","focus","Switch","switches","activeSwitch","setActiveSwitch","handleChange","switchIndex","TextSwap","mounted","setMounted","setTimeout"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMM,YAAY,GAAG,MAAMD,OAAO,CAACE,KAAK,IAAI,CAACA,KAAX,CAAlC;;AAEA,SAAOJ,QAAQ,CAAC;AAAEC,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAD,CAAf;AACD,CANM;AAQP,OAAO,MAAME,UAAU,GAAG,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,QAAJ,EAAcD,OAAO,CAACC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAD,CAAP;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOT,QAAQ,CAAC;AAAEM,IAAAA;AAAF,GAAD,CAAf;AACD,CARM;AAUP,OAAO,MAAMI,eAAe,GAAG,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAkB;AAC/C,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMgB,aAAa,GAAGC,IAAI,IAAI;AAC5BF,IAAAA,UAAU,CAACE,IAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAGC,GAAG,IAAI;AACrBC,IAAAA,MAAM,CAAChB,IAAP,CAAYe,GAAZ,EAAiB,QAAjB,EAA2BE,KAA3B;AACD,GAFD;;AAIA,SAAOlB,QAAQ,CAAC;AAAEW,IAAAA,OAAF;AAAWE,IAAAA,aAAX;AAA0BE,IAAAA;AAA1B,GAAD,CAAf;AACD,CAZM;AAcP,OAAO,MAAMI,MAAM,GAAG,CAAC;AAAEnB,EAAAA,QAAF;AAAYoB,EAAAA;AAAZ,CAAD,KAA4B;AAChD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAACuB,QAAQ,CAAC,CAAD,CAAT,CAAhD;;AAEA,QAAMG,YAAY,GAAGC,WAAW,IAAI;AAClCF,IAAAA,eAAe,CAACF,QAAQ,CAACI,WAAD,CAAT,CAAf;AACD,GAFD;;AAIA,SAAOxB,QAAQ,CAAC;AAAEqB,IAAAA,YAAF;AAAgBE,IAAAA;AAAhB,GAAD,CAAf;AACD,CARM;AAUP,OAAO,MAAME,QAAQ,GAAG,CAAC;AAAEzB,EAAAA;AAAF,CAAD,KAAkB;AACxC,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAIAC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAIAC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD,KAFS,EAEP,KAFO,CAAV;AAGD,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAO3B,QAAQ,CAAC;AAAE0B,IAAAA;AAAF,GAAD,CAAf;AACD,CAlBM","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const MenuToggle = ({ children }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleToggle = () => setOpen(state => !state);\n\n  return children({ open, handleToggle });\n};\n\nexport const PortalNode = ({ children }) => {\n  const [node, setNode] = useState(null);\n\n  useEffect(() => {\n    if (document) setNode(document.querySelector('#portal'));\n  }, []);\n\n  return children({ node });\n};\n\nexport const ContactRedirect = ({ children }) => {\n  const [tooltip, setTooltip] = useState(null);\n\n  const handleTooltip = name => {\n    setTooltip(name);\n  };\n\n  const openTab = url => {\n    window.open(url, '_blank').focus();\n  };\n\n  return children({ tooltip, handleTooltip, openTab });\n};\n\nexport const Switch = ({ children, switches }) => {\n  const [activeSwitch, setActiveSwitch] = useState(switches[0]);\n\n  const handleChange = switchIndex => {\n    setActiveSwitch(switches[switchIndex]);\n  };\n\n  return children({ activeSwitch, handleChange });\n};\n\nexport const TextSwap = ({ children }) => {\n  const [mounted, setMounted] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setMounted(1);\n    }, 4000);\n\n    setTimeout(() => {\n      setMounted(2);\n    }, 8000);\n\n    setTimeout(() => {\n      setMounted(3);\n    }, 11500);\n  }, []);\n\n  return children({ mounted });\n};\n"]},"metadata":{},"sourceType":"module"}